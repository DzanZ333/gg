--// === SERVICES & VARIABLES ===
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SoundService = game:GetService("SoundService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

local foundSound = Instance.new("Sound", SoundService)
foundSound.SoundId = "rbxassetid://9118823104"
foundSound.Volume = 1

local visitedJobIds = {[game.JobId] = true}
local runningLoop, toggleState, hops = false, false, 0
local maxHopsBeforeReset = 50
local moveSpeed = 50
local autoMove = false
local infiniteJump = false
local godmode = false
local loopWalkSpeed = false
local selectedItem = "Quantum Cloner"
local playerESPEnabled = false
local baseESPEnabled = false
local activeHighlights, activeNameTags = {}, {}

-- === BASE ESP ===
local ESPs = {}

local function CreateBaseESP(plot)
    local purchases = plot:FindFirstChild("Purchases")
    local plotBlock = purchases and purchases:FindFirstChild("PlotBlock")
    local main = plotBlock and plotBlock:FindFirstChild("Main")
    local billboard = main and main:FindFirstChild("BillboardGui")
    if not (main and billboard) then return end

    local esp = Instance.new("BillboardGui")
    esp.Name = "BaseESP_" .. plot.Name
    esp.Adornee = main
    esp.Size = UDim2.new(0, 200, 0, 50)
    esp.AlwaysOnTop = true

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = "[Info]"
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextStrokeTransparency = 0.5
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.Parent = esp

    esp.Parent = game.CoreGui

    ESPs[plot] = {Gui = esp, Billboard = billboard, Label = label}
end

local function RemoveBaseESP(plot)
    local data = ESPs[plot]
    if data and data.Gui then data.Gui:Destroy() end
    ESPs[plot] = nil
end

local function RefreshBaseESP()
    local currentPlots = {}
    for _, plot in pairs(workspace.Plots:GetChildren()) do
        currentPlots[plot] = true
        if not ESPs[plot] then CreateBaseESP(plot) end
    end
    for plot in pairs(ESPs) do
        if not currentPlots[plot] then RemoveBaseESP(plot) end
    end
end

RunService.RenderStepped:Connect(function()
    if baseESPEnabled then
        for _, v in pairs(ESPs) do
            local billboard = v.Billboard
            local label = v.Label
            if billboard and label then
                local remain = billboard:FindFirstChild("RemainingTime")
                local remainText = remain and remain.Text or "?"
                local remainClean = remainText:gsub("%s", ""):lower()
                local emoji, color = "‚ùì", Color3.fromRGB(255, 255, 255)
                if remainClean == "0s" or remainClean == "60s" then
                    emoji, color = "üü¢ UNLOCKED", Color3.fromRGB(0, 255, 0)
                else
                    emoji, color = "üî¥ LOCKED", Color3.fromRGB(255, 0, 0)
                end
                label.Text = string.format("%s\nTime: %s", emoji, remainText)
                label.TextColor3 = color
            end
        end
    end
end)

task.spawn(function()
    while task.wait(2) do if baseESPEnabled then RefreshBaseESP() end end
end)

--// === GUI SETUP: REDZLIB V5 ===
local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/XenTz-Z/RedzLibV5/main/Source.lua"))()
local Window = redzlib:MakeWindow({Title = "ü¶ù Steal A Brainrot", SubTitle = "by DzanZ", SaveFolder = "PetFinder_Save"})
Window:AddMinimizeButton({
    Button = {Size = UDim2.fromOffset(32, 32), Position = UDim2.new(0, 10, 0, 10), Image = "rbxassetid://117807462921675"}
})
local TabInfo = Window:MakeTab({"Info", "info"})
local TabMain = Window:MakeTab({"Main", "home"})
local TabVisual = Window:MakeTab({"Visual", "eye"})
local TabMisc = Window:MakeTab({"Misc", "settings"})

TabInfo:AddParagraph({Title = "Credits", Text = "Discord: @dzangaming\nYouTube: @mikoIIX"})
TabInfo:AddParagraph({Title = "Game Version", Text = "Server Version: **" .. game.PlaceVersion .. "**"})
TabInfo:AddButton({
    Name = "üìã Copy Discord Invite",
    Description = "You can support me by joining my discord server",
    Callback = function() 
    setclipboard("https://discord.gg/HvvpEhtHdX") 
        end
})
game.StarterGui:SetCore("SendNotification", {Title = "Peace Hub", Text = "Game Version: " .. game.PlaceVersion, Duration = 5})

-- === MAIN ===
TabMain:AddToggle({
    Name = "Pet Finder",
    Description = "Will hop to the server that has your desired pet",
    Default = getgenv().PetFinderEnabledByDefault or false,
    Callback = function(state) toggleState = state if toggleState then loopCheck() end end
})
TabMain:AddButton({
    Name = "üîÑ Refresh Check",
    Description = "Refresh your desired pet esp",
    Callback = function() removeESPs() 
    local pets = checkForPets() if #pets>0 then foundSound:Play() sendWebhook(pets) end end
})

TabMain:AddButton({
    Name = "üåê Server Hop",
    Callback = function() serverHop() 
        end
})

-- New Steal OP button
TabMain:AddButton({
    Name = "ü¶ù Steal OP",
    Description = "Use before patch, may bug sometimes while using 3x walkspeed",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/DzanZ333/gg/refs/heads/main/PeaceHub.lua"))()
    end
})
TabMain:AddDropdown({
    Name = "Buy Item", Options = {"Quantum Cloner","Invisibility Cloak","Medusa's Head","All Seeing Sentry","Trap","Rainbowrath Sword"},
    Default = "Invisibility Cloak",
    Callback = function(val) selectedItem = val pcall(function() ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Net"):WaitForChild("RF/CoinsShopService/RequestBuy"):InvokeServer(val) end) end
})

-- === VISUAL ===
TabVisual:AddToggle({
    Name = "Player ESP",
    Default = false,
    Callback = function(v) playerESPEnabled = v if not v then removeAllESP() else for _, plr in ipairs(Players:GetPlayers()) do if plr ~= player and plr.Character then createESP(plr) end end end end
})
TabVisual:AddToggle({
    Name = "Base ESP (Plots)",
    Description = "Bug sometimes, u need to re-toggle it",
    Default = false,
    Callback = function(v)
        baseESPEnabled = v
        if not v then for _, e in pairs(ESPs) do if e.Gui then e.Gui:Destroy() end end ESPs = {} end
    end
})

-- === MISC ===
TabMisc:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(v) 
        infiniteJump = v 
        end
})
TabMisc:AddToggle({
    Name = "Godmode",
    Default = false,
    Callback = function(v)
        godmode = v
        end
})
TabMisc:AddToggle({
     Name = "Auto Move",
     Description = "3x Walkspeed required",
     Default = false,
     Callback = function(v)
        autoMove = v
        end
})
TabMisc:AddSlider({
     Name = "Move Speed", Min = 10, Max = 150, 
     Description = "Same as fly bypass, aint work more than 100",
     Default = 90,
     Callback = function(val) 
        moveSpeed = val 
        end
})
TabMisc:AddToggle({
    Name = "3x Walkspeed", 
    Default = false,
    Description = "Need invisibility cloak once for it work",
    Callback = function(val)
        loopWalkSpeed = val
        local function apply()
            while loopWalkSpeed do
                local char = player.Character
                if char then
                    local hum = char:FindFirstChildOfClass("Humanoid")
                    if hum then
                        hum.WalkSpeed = 90
                        hum:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
                            if loopWalkSpeed and hum.WalkSpeed ~= 90 then hum.WalkSpeed = 90 end
                        end)
                    end
                end
                task.wait(0.3)
            end
        end
        if val then task.spawn(apply) end
    end
})
player.CharacterAdded:Connect(function() if loopWalkSpeed then task.wait(1) local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid") if hum then hum.WalkSpeed = 90 end end end)

-- === PET ===
function addESP(model) local part = model.PrimaryPart or model:FindFirstChildWhichIsA("BasePart") if not part then return end local gui = Instance.new("BillboardGui", part) gui.Adornee = part gui.Size = UDim2.new(0,100,0,30) gui.AlwaysOnTop = true local label = Instance.new("TextLabel", gui) label.Size = UDim2.new(1,0,1,0) label.BackgroundTransparency = 1 label.Text = "üéØ Target Pet" label.TextColor3 = Color3.fromRGB(255,0,0) label.Font = Enum.Font.SourceSansBold label.TextScaled = true end
function removeESPs() for _, v in ipairs(workspace:GetDescendants()) do if v:IsA("BasePart") and v:FindFirstChild("PetESP") then v.PetESP:Destroy() end end end
function checkForPets() local found = {} for _, obj in ipairs(workspace:GetDescendants()) do if obj:IsA("Model") then for _, target in ipairs(getgenv().TargetPetNames) do if string.find(string.lower(obj.Name), string.lower(target)) then if not obj:FindFirstChild("PetESP", true) then addESP(obj) end table.insert(found, obj.Name) end end end end return found end
function sendWebhook(pets) local embed = {title = "üéØ Pet(s) Detected!",description = table.concat(pets, "\n"),color = 0xFF9900,fields = {{name="üë§ Player",value="["..player.Name.."](https://www.roblox.com/users/"..player.UserId.."/profile)",inline=true},{name="üÜî Server JobId",value="üìã **"..game.JobId.."**",inline=true},{name="‚è∞ Timestamp",value="",inline=false}},footer={text="Pet Finder by DzanZ"}} local data = HttpService:JSONEncode({content = "@everyone", embeds = {embed}}) local req = http_request or request or (syn and syn.request) if req then pcall(function() req({Url = getgenv().webhook, Method = "POST", Headers = {["Content-Type"] = "application/json"}, Body = data}) end) end end
function serverHop() hops += 1 if hops >= maxHopsBeforeReset then visitedJobIds = {} hops = 0 end local url = "https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100" local ok, data = pcall(function() return HttpService:JSONDecode(game:HttpGet(url)) end) if ok and data and data.data then for _, server in ipairs(data.data) do if server.id ~= game.JobId and not visitedJobIds[server.id] then visitedJobIds[server.id] = true TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id) return end end end TeleportService:Teleport(game.PlaceId) end
function loopCheck() if runningLoop or not toggleState then return end runningLoop = true task.spawn(function() while toggleState do removeESPs() local pets = checkForPets() if #pets > 0 then foundSound:Play() sendWebhook(pets) break else task.wait(2) serverHop() end end runningLoop = false end) end

function createESP(plr) if not plr.Character or plr == player then return end if not activeHighlights[plr] then local highlight = Instance.new("Highlight", plr.Character) highlight.FillColor = Color3.fromRGB(0, 255, 255) highlight.OutlineColor = Color3.new(1, 1, 1) highlight.FillTransparency = 0.5 highlight.OutlineTransparency = 0 highlight.Adornee = plr.Character highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop activeHighlights[plr] = highlight end if not activeNameTags[plr] and plr.Character:FindFirstChild("Head") then local tag = Instance.new("BillboardGui", plr.Character.Head) tag.Size = UDim2.new(0, 100, 0, 20) tag.Adornee = plr.Character.Head tag.AlwaysOnTop = true tag.StudsOffset = Vector3.new(0, 2.5, 0) local label = Instance.new("TextLabel", tag) label.Size = UDim2.new(1, 0, 1, 0) label.BackgroundTransparency = 1 label.Text = plr.Name label.TextColor3 = Color3.fromRGB(0, 255, 255) label.Font = Enum.Font.GothamBold label.TextScaled = true activeNameTags[plr] = tag end end
function removeAllESP() for _, v in pairs(activeHighlights) do if v then v:Destroy() end end for _, v in pairs(activeNameTags) do if v then v:Destroy() end end table.clear(activeHighlights) table.clear(activeNameTags) end

Players.PlayerAdded:Connect(function(plr) plr.CharacterAdded:Connect(function() if playerESPEnabled then task.wait(1) createESP(plr) end end) end)
for _, plr in ipairs(Players:GetPlayers()) do if plr ~= player and plr.Character then plr.CharacterAdded:Connect(function() if playerESPEnabled then task.wait(1) createESP(plr) end end) end end

local hrp, cam
local function updateRefs() local char = player.Character or player.CharacterAdded:Wait() hrp = char:WaitForChild("HumanoidRootPart") cam = workspace.CurrentCamera end
updateRefs() player.CharacterAdded:Connect(updateRefs)

RunService.RenderStepped:Connect(function() if autoMove and hrp and cam then hrp.Velocity = cam.CFrame.LookVector * moveSpeed end end)
UserInputService.JumpRequest:Connect(function() if infiniteJump and player.Character then local humanoid = player.Character:FindFirstChildOfClass("Humanoid") if humanoid then humanoid:ChangeState(Enum.HumanoidStateType.Jumping) end end end)
RunService.Heartbeat:Connect(function() if godmode and player.Character then local hum = player.Character:FindFirstChildOfClass("Humanoid") if hum and hum.Health then hum.Health = hum.MaxHealth end end end)
if getgenv().PetFinderEnabledByDefault then toggleState = true loopCheck() end